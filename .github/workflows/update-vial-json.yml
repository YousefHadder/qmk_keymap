name: Generate Vial JSON

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  generate-vial-json:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-avr avr-libc dfu-util gcc-arm-none-eabi binutils-arm-none-eabi libnewlib-arm-none-eabi
        
    - name: Clone QMK firmware
      run: |
        git clone https://github.com/qmk/qmk_firmware.git
        cd qmk_firmware
        git submodule update --init --recursive
        
    - name: Install QMK CLI
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install qmk
        
    - name: Setup QMK
      run: |
        qmk setup -y
        qmk config user.keyboard=crkbd/rev4_1/standard
        qmk config user.keymap=default
        
    - name: Copy keymap to QMK
      run: |
        # Create keymap directory
        mkdir -p qmk_firmware/keyboards/crkbd/keymaps/vial
        
        # Copy your keymap files exactly as they are
        cp keymap.c qmk_firmware/keyboards/crkbd/keymaps/vial/
        cp config.h qmk_firmware/keyboards/crkbd/keymaps/vial/ || echo "config.h not found, skipping"
        cp rules.mk qmk_firmware/keyboards/crkbd/keymaps/vial/ || echo "rules.mk not found, skipping"
        cp sm_td.h qmk_firmware/keyboards/crkbd/keymaps/vial/ || echo "sm_td.h not found, skipping"
        
        # Copy any other files you might have
        cp *.json qmk_firmware/keyboards/crkbd/keymaps/vial/ 2>/dev/null || echo "No JSON files found, skipping"
        
        # Verify files were copied
        echo "Files copied to keymap directory:"
        ls -la qmk_firmware/keyboards/crkbd/keymaps/vial/
        
    - name: Create Vial keymap configuration
      run: |
        cd qmk_firmware/keyboards/crkbd/keymaps/vial
        
        # Create vial.json if it doesn't exist
        if [ ! -f vial.json ]; then
          cat > vial.json << 'EOF'
        {
          "name": "Corne Keyboard 3x6_3_ex2",
          "vendorId": "0x4653",
          "productId": "0x0001",
          "lighting": "vialrgb",
          "matrix": {
            "rows": 8,
            "cols": 8
          },
          "layouts": {
            "keymap": [
              [
                {"c": "#777777"},
                "0,0", "0,1", "0,2", "0,3", "0,4", "0,5", "0,6",
                {"x": 1},
                "4,6", "4,5", "4,4", "4,3", "4,2", "4,1", "4,0"
              ],
              [
                "1,0", "1,1", "1,2", "1,3", "1,4", "1,5", "1,6",
                {"x": 1},
                "5,6", "5,5", "5,4", "5,3", "5,2", "5,1", "5,0"
              ],
              [
                "2,0", "2,1", "2,2", "2,3", "2,4", "2,5",
                {"x": 3},
                "6,5", "6,4", "6,3", "6,2", "6,1", "6,0"
              ],
              [
                {"x": 2.5},
                "3,3", "3,4", "3,5",
                {"x": 1},
                "7,5", "7,4", "7,3"
              ]
            ]
          }
        }
        EOF
        fi
        
    - name: Generate Vial JSON from keymap
      run: |
        cd qmk_firmware
        
        # Try to compile and generate JSON for 3x6_3_ex2 layout
        qmk compile -kb crkbd/rev4_1/standard -km vial --compiledb
        
        # Generate the Vial JSON
        qmk c2json -kb crkbd/rev4_1/standard -km vial > ../vial.json
        
    - name: Validate and format JSON
      run: |
        # Validate JSON syntax
        python3 -m json.tool vial.json > vial_formatted.json
        mv vial_formatted.json vial.json
        
        # Add metadata
        python3 << 'EOF'
        import json
        import datetime

        with open('vial.json', 'r') as f:
            data = json.load(f)

        # Add generation metadata
        data['generated'] = datetime.datetime.now().isoformat()
        data['generator'] = 'GitHub Actions QMK Workflow'

        with open('vial.json', 'w') as f:
            json.dump(data, f, indent=2)
        EOF
        
    - name: Upload Vial JSON as artifact
      uses: actions/upload-artifact@v3
      with:
        name: vial-json
        path: vial.json
        
    - name: Commit generated vial.json
      if: github.event_name == 'push'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Only commit if there are changes
        if ! git diff --quiet vial.json; then
          git add vial.json
          git commit -m "Auto-generate vial.json from keymap [skip ci]" || exit 0
          git push
        else
          echo "No changes to vial.json"
        fi
